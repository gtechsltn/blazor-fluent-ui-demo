name: 'Build and Deploy ASP.NET Web App'

description: 'Deploy an ASP.NET Web App to Azure App'

inputs:
  appName:
    description: 'The name of the Azure App Service'
    default: 'oliverscopilot'
    required: true
  pathToProject:
    description: 'Path to the ASP.NET Web App project'
    required: true
  dotnetVersion:
    description: 'The version of .NET to use'
    required: false
    default: '8.0.x'
  azureCredentials:
    description: 'Azure credentials'
    required: true

runs:
  using: 'composite'  

  steps:
  
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ inputs.dotnetVersion }} 

    - name: Restore dependencies
      run: dotnet restore
      shell: bash

    - name: Build
      run: dotnet build --no-restore
      shell: bash

    - name: Test
      run: dotnet test --no-build --verbosity normal
      shell: bash

    - name: Publish
      shell: bash
      env:
        OUTPUT_FOLDER: ./output${{ inputs.appName }}
        SRC_FOLDER: ${{ inputs.pathToProject }}
      run: | 
        echo "Publishing $SRC_FOLDER to $OUTPUT_FOLDER"
        dotnet publish $SRC_FOLDER --output $OUTPUT_FOLDER

    - name: Zip the build output
      env:
        OUTPUT_FOLDER: ./output${{ inputs.appName }}/*
        ZIP_FILE: ./output${{ inputs.appName }}.zip
      run: |
        echo "Zipping the build output ${{ env.OUTPUT_FOLDER }} to ${{ env.ZIP_FILE }}"
        Compress-Archive -Path ${{ env.OUTPUT_FOLDER }} -DestinationPath ${{ env.ZIP_FILE }}
      shell: pwsh

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ inputs.azureCredentials }}

    - name: Deploy App with Zip Deploy
      env:
        APP_NAME: ${{ inputs.appName }}
        ZIP_FILE: ./output${{ inputs.appName }}.zip
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.APP_NAME }}
        package: ${{ env.ZIP_FILE }}

    - name: Set Output
      id: set-output
      shell: bash
      run: echo "appName=${{ inputs.appName }}" >> $GITHUB_ENV
